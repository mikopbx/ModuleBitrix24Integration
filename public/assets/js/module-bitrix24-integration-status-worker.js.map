{"version":3,"sources":["src/module-bitrix24-integration-status-worker.js"],"names":["ModuleBitrix24IntegrationStatusWorker","$moduleStatus","$","$statusToggle","$submitButton","$formObj","timeOut","timeOutHandle","errorCounts","initialize","restartWorker","changeStatus","window","clearTimeout","timeoutHandle","worker","checkbox","testConnection","api","url","globalRootUrl","on","successTest","PbxApi","onComplete","setTimeout","onSuccess","removeClass","onFailure","onResponse","response","remove","data","visualErrorString","JSON","stringify","messages","replace","Object","keys","length","result","after","addClass","status","html","globalTranslate","mod_b24_i_Connected","mod_b24_i_Disconnected","mod_b24_i_StatusError","mod_b24_i_UpdateStatus"],"mappings":"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","sourcesContent":["/*\n * MikoPBX - free phone system for small business\n * Copyright (C) 2017-2021 Alexey Portnov and Nikolay Beketov\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation; either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License along with this program.\n * If not, see <https://www.gnu.org/licenses/>.\n */\n/* global globalTranslate, Form, Config, PbxApi */\n\n/**\n * Тестирование соединения модуля с Bitrix24\n */\nconst ModuleBitrix24IntegrationStatusWorker = {\n\n\t$moduleStatus: $('#status'),\n\t$statusToggle: $('#module-status-toggle'),\n\t$submitButton: $('#submitbutton'),\n\t$formObj: $('#module-bitrix24-integration-form'),\n\ttimeOut: 3000,\n\ttimeOutHandle: '',\n\terrorCounts: 0,\n\tinitialize() {\n\t\tModuleBitrix24IntegrationStatusWorker.restartWorker();\n\t},\n\trestartWorker() {\n\t\tModuleBitrix24IntegrationStatusWorker.errorCounts = 0;\n\t\tModuleBitrix24IntegrationStatusWorker.changeStatus('Updating');\n\t\twindow.clearTimeout(ModuleBitrix24IntegrationStatusWorker.timeoutHandle);\n\t\tModuleBitrix24IntegrationStatusWorker.worker();\n\t},\n\tworker() {\n\t\tif (ModuleBitrix24IntegrationStatusWorker.$statusToggle.checkbox('is checked')) {\n\t\t\tModuleBitrix24IntegrationStatusWorker.testConnection();\n\t\t} else {\n\t\t\tModuleBitrix24IntegrationStatusWorker.errorCounts = 0;\n\t\t\tModuleBitrix24IntegrationStatusWorker.changeStatus('Disconnected');\n\t\t}\n\t},\n\n\t/**\n\t * Проверка соединения с сервером Bitrix24\n\t * @returns {boolean}\n\t */\n\ttestConnection() {\n\t\t$.api({\n\t\t\turl: `${globalRootUrl}module-bitrix24-integration/checkState`,\n\t\t\ton: 'now',\n\t\t\tsuccessTest: PbxApi.successTest,\n\t\t\tonComplete() {\n\t\t\t\tModuleBitrix24IntegrationStatusWorker.timeoutHandle = window.setTimeout(\n\t\t\t\t\tModuleBitrix24IntegrationStatusWorker.worker,\n\t\t\t\t\tModuleBitrix24IntegrationStatusWorker.timeOut,\n\t\t\t\t);\n\t\t\t},\n\t\t\tonSuccess() {\n\t\t\t\tModuleBitrix24IntegrationStatusWorker.changeStatus('Connected');\n\t\t\t\tModuleBitrix24IntegrationStatusWorker.errorCounts = 0;\n\t\t\t\tModuleBitrix24IntegrationStatusWorker.$formObj.removeClass('error');\n\t\t\t},\n\t\t\tonFailure() {\n\t\t\t\tModuleBitrix24IntegrationStatusWorker.errorCounts++;\n\t\t\t\tif (ModuleBitrix24IntegrationStatusWorker.errorCounts > 3){\n\t\t\t\t\tModuleBitrix24IntegrationStatusWorker.changeStatus('ConnectionError');\n\t\t\t\t}\n\t\t\t},\n\t\t\tonResponse(response) {\n\t\t\t\t$('.message.ajax').remove();\n\t\t\t\tif (ModuleBitrix24IntegrationStatusWorker.errorCounts < 3){\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Debug mode\n\t\t\t\tif (typeof (response.data) !== 'undefined') {\n\t\t\t\t\tlet visualErrorString = JSON.stringify(response.messages, null, 2);\n\n\t\t\t\t\tif (typeof visualErrorString === 'string') {\n\t\t\t\t\t\tvisualErrorString = visualErrorString.replace(/\\n/g, '<br/>');\n\t\t\t\t\t\tvisualErrorString = visualErrorString.replace(/[\\[\\]']+/g,'');\n\n\t\t\t\t\t\tif (Object.keys(response).length > 0 && response.result !== true) {\n\t\t\t\t\t\t\tModuleBitrix24IntegrationStatusWorker.$moduleStatus\n\t\t\t\t\t\t\t\t.after(`<div class=\"ui error icon message ajax\">\n\t\t\t\t\t\t\t\t\t<i class=\"exclamation circle icon\"></i>\n\t\t\t\t\t\t\t\t\t<div class=\"content\">\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t<pre style='white-space: pre-wrap'>${visualErrorString}</pre>\n\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\t</div>`);\n\t\t\t\t\t\t\tModuleBitrix24IntegrationStatusWorker.$formObj.addClass('error');\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t},\n\t/**\n\t * Updates module status on the right corner label\n\t * @param status\n\t */\n\tchangeStatus(status) {\n\t\tModuleBitrix24IntegrationStatusWorker.$moduleStatus\n\t\t\t.removeClass('grey')\n\t\t\t.removeClass('yellow')\n\t\t\t.removeClass('green')\n\t\t\t.removeClass('red');\n\n\t\tswitch (status) {\n\t\t\tcase 'Connected':\n\t\t\t\tModuleBitrix24IntegrationStatusWorker.$moduleStatus\n\t\t\t\t\t.addClass('green')\n\t\t\t\t\t.html(globalTranslate.mod_b24_i_Connected);\n\t\t\t\tbreak;\n\t\t\tcase 'Disconnected':\n\t\t\t\tModuleBitrix24IntegrationStatusWorker.$moduleStatus\n\t\t\t\t\t.addClass('grey')\n\t\t\t\t\t.html(globalTranslate.mod_b24_i_Disconnected);\n\t\t\t\tbreak;\n\t\t\tcase 'ConnectionError':\n\t\t\t\tModuleBitrix24IntegrationStatusWorker.$moduleStatus\n\t\t\t\t\t.addClass('red')\n\t\t\t\t\t.html(globalTranslate.mod_b24_i_StatusError);\n\t\t\t\tbreak;\n\t\t\tcase 'Updating':\n\t\t\t\tModuleBitrix24IntegrationStatusWorker.$moduleStatus\n\t\t\t\t\t.addClass('grey')\n\t\t\t\t\t.html(`<i class=\"spinner loading icon\"></i>${globalTranslate.mod_b24_i_UpdateStatus}`);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tModuleBitrix24IntegrationStatusWorker.$moduleStatus\n\t\t\t\t\t.addClass('red')\n\t\t\t\t\t.html(globalTranslate.mod_b24_i_StatusError);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}"],"file":"module-bitrix24-integration-status-worker.js"}